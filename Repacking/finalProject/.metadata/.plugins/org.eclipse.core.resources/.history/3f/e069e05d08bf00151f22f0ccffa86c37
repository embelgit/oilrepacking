package com.lib.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.lib.DAO.LibraryDAO;
import com.lib.pojos.Author;
import com.lib.pojos.Book;
import com.lib.pojos.Category;
import com.lib.pojos.Member;
import com.lib.pojos.Publisher;

@Service
@Transactional
public class LibraryServiceImpl implements LibraryService
{
	@Autowired
	private LibraryDAO dao;
	@Override
	public String addMember(Member m) 
	{
	  MemberTable m1=dao.addMember(m);
		
	  if (m1.getMemberId() != null)
			return "Member added successfully";
		return "Member registration Failed";
	}
	

	@Override
	public MemberTable isValidUser(MemberTable m)
	{
		System.out.println("in b.l of service login user");
		MemberTable member=dao.isValidUser(m);
		return member;
	}


	@Override
	public String addAuthor(AuthorTable a)
	{
		AuthorTable author=dao.addAuthor(a);
		if(author.getAuthorId() !=null)
			return "author added successfully";
		return "Failed";
	}


	@Override
	public String addPublisher(PublisherTable p) 
	{
		PublisherTable publisher=dao.addPublisher(p);
		if(publisher.getPublisherId() !=null)
			return "publisher added successfully";
		return "Failed";
	}


	@Override
	@Transactional(readOnly=true)
	public List<MemberTable> memberList() 
	{
	
		System.out.println("in b.l of service ");
		return dao.memberList();
	}


	@Override
	public MemberTable updateMember(MemberTable m) 
	{
		MemberTable member=dao.updateMember(m);
		return member;
	}


	@Override
	public MemberTable changePassword(MemberTable m) 
	{
	    MemberTable member=dao.changePassword(m); 
		return member;
	}


	@Override
	public String addCategory(CategoryTable c)
	{
		CategoryTable cat=dao.addCategory(c);
		if(cat.getCategoryId() !=null)
			return "category added successfully";
		return "Failed";
	}


	@Override
	public String addBook(BookTable b)
	{
	
		
		BookTable book=dao.addBook(b);
		if(book.getBookId() !=null)
			return "book added successfully";
		return "Failed";
	}


	@Override
	@Transactional
	public List<BookTable> bookList() 
	{
		System.out.println("in b.l of service ");
		return dao.bookList();
	}


	


}
